{"ast":null,"code":"var _jsxFileName = \"/Users/keshav/rishi-qna/src/component/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport '../css/Post.css';\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport Modal from \"react-modal\";\nimport db from \"../firebase\";\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post({\n  id,\n  question,\n  image,\n  timestamp,\n  NITuser\n}) {\n  _s();\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const questionId = useSelector(selectQuestionId);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers, setGetAnswers] = useState([]);\n  useEffect(() => {\n    if (questionId) {\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setGetAnswers(snapshot.docs.map(doc => ({\n        id: doc.id,\n        answers: doc.data()\n      }))));\n    }\n  }, [questionId]);\n\n  const handleAnswer = e => {\n    e.preventDefault();\n\n    if (questionId) {\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\n        user: user,\n        answer: answer,\n        questionId: questionId,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n\n    console.log(questionId);\n    setAnswer(\"\");\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    onClick: () => dispatch(setQuestionInfo({\n      questionId: Id,\n      questionName: question\n    })),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_info\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: NITuser.photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: NITuser.displayName ? NITuser.displayName : NITuser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: new Date(timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate()).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_question\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"post_button\",\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: IsmodalOpen,\n          onRequestClose: () => setIsModalOpen(false),\n          shouldCloseOnOverlayClick: false,\n          style: {\n            overlay: {\n              width: 680,\n              height: 550,\n              backgroundColor: \"rgba(0,0,0,0.8)\",\n              zIndex: \"1000\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: \"-250px\",\n              marginLeft: \"-350px\"\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__question\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"asked by\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: users.displayName ? users.displayName : users.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 20\n              }, this), \" \", \"\", \"on\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: new Date(timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate()).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__answer\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: answer,\n              onChange: e => setAnswer(e.target.value),\n              placeholder: \"Enter Your Answer\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__button\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancle\",\n              onClick: () => setIsModalOpen(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"sumbit\",\n              onClick: handleAnswer,\n              className: \"add\",\n              children: \"Add Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_answer\",\n        children: getAnswers.map(({\n          id,\n          answers\n        }) => {\n          var _answers$timestamp;\n\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              position: \"relative\",\n              paddingBottom: \"5px\"\n            },\n            children: Id === answers.questionId ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [answers.answer, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: \"absolute\",\n                  color: \"gray\",\n                  fontSize: \"small\",\n                  display: \"flex\",\n                  right: \"0px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"#b92b27\"\n                  },\n                  children: [answers.user.displayName ? answers.user.displayName : answers.user.email, \" \", \"on\", \" \", new Date((_answers$timestamp = answers.timestamp) === null || _answers$timestamp === void 0 ? void 0 : _answers$timestamp.toDate()).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this) : \"\"\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_footerAction\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowUpwardOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ArrowDownwardOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RepeatOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBubbleOutlineOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_footerLeft\",\n        children: [/*#__PURE__*/_jsxDEV(ShareOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"asDARKA0kRXNf2npepspLYlBk5I=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/keshav/rishi-qna/src/component/Post.js"],"names":["Avatar","React","useEffect","useState","ArrowUpwardOutlinedIcon","ArrowDownwardOutlinedIcon","RepeatOutlinedIcon","ChatBubbleOutlineOutlinedIcon","MoreHorizOutlined","ShareOutlined","useDispatch","useSelector","selectUser","Modal","db","selectQuestionId","setQuestionInfo","firebase","Post","id","question","image","timestamp","NITuser","user","dispatch","IsmodalOpen","setIsModalOpen","questionId","answer","setAnswer","getAnswers","setGetAnswers","collection","doc","orderBy","onSnapshot","snapshot","docs","map","answers","data","handleAnswer","e","preventDefault","add","firestore","FieldValue","serverTimestamp","console","log","Id","questionName","photo","displayName","email","Date","toDate","toLocaleString","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","users","target","value","position","paddingBottom","color","fontSize","display","right","imageUrl"],"mappings":"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","sourcesContent":["import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport '../css/Post.css'\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport Modal from \"react-modal\";\nimport db from \"../firebase\";\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\n\n\nfunction Post({id, question,image, timestamp,NITuser})\n{\n  const user = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const questionId = useSelector(selectQuestionId);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers, setGetAnswers] = useState([]);\n  useEffect(() => {\n    if (questionId) {\n      db.collection(\"questions\")\n        .doc(questionId)\n        .collection(\"answer\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setGetAnswers(\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\n          )\n        );\n    }\n  }, [questionId]);\n\n  const handleAnswer = (e) => {\n    e.preventDefault();\n\n    if (questionId) {\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\n        user: user,\n        answer: answer,\n        questionId: questionId,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n    console.log(questionId);\n    setAnswer(\"\");\n    setIsModalOpen(false);\n  };\n  return (\n    <div className=\"post\"\n    onClick={() =>\n      dispatch(\n        setQuestionInfo({\n          questionId: Id,\n          questionName: question,\n        })\n      )\n    }\n    >\n      <div className=\"post_info\">\n        <Avatar\n        src= {NITuser.photo}/>\n        <h4>{NITuser.displayName?NITuser.displayName:NITuser.email}</h4>\n            <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\n            </div>\n      <div className=\"post_body\">\n        <div className=\"post_question\">\n          <p>{question}</p>\n          <button \n          onClick={() => setIsModalOpen(true)}\n          className=\"post_button\">\n            Answer\n                    </button>\n                    <Modal\n            isOpen={IsmodalOpen}\n            onRequestClose={() => setIsModalOpen(false)}\n            shouldCloseOnOverlayClick={false}\n            style={{\n              overlay: {\n                width: 680,\n                height: 550,\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                zIndex: \"1000\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: \"-250px\",\n                marginLeft: \"-350px\",\n              },\n            }}\n                 >\n                    <div className=\"modal__question\">\n                 <h1>{question}</h1>\n                 <p>\n                   asked by{\" \"}\n                   <span className=\"name\">\n                     {users.displayName ? users.displayName : users.email}\n                   </span>{\" \"}\n                   {\"\"}\n                   on{\" \"}\n                   <span className=\"name\">\n                     {new Date(timestamp?.toDate()).toLocaleString()}\n                   </span>\n                 </p>\n               </div>\n               <div className=\"modal__answer\">\n                 <textarea\n                   value={answer}\n                   onChange={(e) => setAnswer(e.target.value)}\n                   placeholder=\"Enter Your Answer\"\n                   type=\"text\"\n                 />\n               </div>\n               <div className=\"modal__button\">\n                 <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n                   Cancel\n                 </button>\n                 <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\n                   Add Answer\n                 </button>\n               </div>\n                      </Modal>\n        </div>\n        <div className=\"post_answer\">\n        {getAnswers.map(({ id, answers }) => (\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\n              {Id === answers.questionId ? (\n                <span>\n                  {answers.answer}\n                  <br />\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      color: \"gray\",\n                      fontSize: \"small\",\n                      display: \"flex\",\n                      right: \"0px\",\n                    }}\n                  >\n                    <span style={{ color: \"#b92b27\" }}>\n                      {answers.user.displayName\n                        ? answers.user.displayName\n                        : answers.user.email}{\" \"}\n                      on{\" \"}\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\n                    </span>\n                  </span>\n                </span>\n              ) : (\n                \"\"\n              )}\n            </p>\n          ))}\n        </div>\n        <img src={imageUrl} alt=\"\" />\n      </div>\n \n      <div className=\"post_footer\">\n        <div className=\"post_footerAction\">\n          <ArrowUpwardOutlinedIcon />\n          <ArrowDownwardOutlinedIcon />\n        </div>\n\n        <RepeatOutlinedIcon />\n        <ChatBubbleOutlineOutlinedIcon />\n        <div className=\"post_footerLeft\">\n          <ShareOutlined />\n          <MoreHorizOutlined />\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}