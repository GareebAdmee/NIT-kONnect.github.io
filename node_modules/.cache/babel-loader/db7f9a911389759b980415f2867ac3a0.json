{"ast":null,"code":"var _jsxFileName = \"/Users/keshav/rishi-qna/src/component/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar } from '@material-ui/core';\nimport React, { useEffect, useState } from \"react\";\nimport '../css/Post.css';\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport Modal from 'react-modal';\nimport \"../css/Navbar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport db from \"../firebase\";\nimport { selectQuestionId, selectQuestionName, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\nimport { selectUser } from \"../features/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\n\nfunction Post({\n  Id,\n  question,\n  image,\n  timestamp,\n  NITuser\n}) {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [openModal, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const questionId = useSelector(selectQuestionId);\n  const questionName = useSelector(selectQuestionName);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers, setGetAnswers] = useState([]);\n  useEffect(() => {\n    if (questionId) {\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setGetAnswers(snapshot.docs.map(doc => ({\n        id: doc.id,\n        answers: doc.data()\n      }))));\n    }\n  }, [questionId]);\n\n  const handleAnswer = e => {\n    e.preventDefault();\n\n    if (questionId) {\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\n        questionId: questionId,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        answer: answer,\n        user: user\n      });\n      console.log(questionId, questionName);\n      setAnswer(\"\");\n      setIsModalOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    onClick: () => dispatch(setQuestionInfo({\n      questionId: Id,\n      questionName: question\n    })),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_info\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: NITuser.photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: NITuser.displayName ? NITuser.displayName : NITuser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: new Date(timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate()).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_question\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(true),\n            className: \"post_button\",\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: openModal,\n            onRequestClose: () => setIsModalOpen(false),\n            shouldCloseOnOverlayClick: false,\n            style: {\n              overlay: {\n                width: 600,\n                height: 550,\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                zIndex: \"1000\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: \"-250px\",\n                marginLeft: \"-350px\"\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal_question\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"asked by\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: NITuser.displayName ? NITuser.displayName : NITuser.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 17\n                }, this), \" \", \"on\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: new Date(timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate()).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal_answer\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                required: true,\n                value: answer,\n                onChange: e => setAnswer(e.target.value),\n                placeholder: \"Enter Your Answer\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal__button\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                onClick: () => setIsModalOpen(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: handleAnswer,\n                className: \"add\",\n                children: \"Submit Your Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_ans\",\n          children: getAnswers.map(({\n            id,\n            answers\n          }) => {\n            var _answers$timestamp;\n\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                position: \"relative\",\n                paddingBottom: \"5px\"\n              },\n              children: Id === answers.questionId ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [answers.answer, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    position: \"absolute\",\n                    color: \"gray\",\n                    fontSize: \"small\",\n                    display: \"flex\",\n                    right: \"0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"#b92b27\"\n                    },\n                    children: [answers.user.displayName ? answers.user.displayName : answers.user.email, \" \", \"on\", \" \", new Date((_answers$timestamp = answers.timestamp) === null || _answers$timestamp === void 0 ? void 0 : _answers$timestamp.toDate()).toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this) : \"\"\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_footerAction\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowUpwardOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ArrowDownwardOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RepeatOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ChatBubbleOutlineOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_footerLeft\",\n          children: [/*#__PURE__*/_jsxDEV(ShareOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MoreHorizOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"PMQq6QgBiBazfZYcLlZamk/sUxw=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/keshav/rishi-qna/src/component/Post.js"],"names":["Avatar","React","useEffect","useState","ArrowUpwardOutlinedIcon","ArrowDownwardOutlinedIcon","RepeatOutlinedIcon","ChatBubbleOutlineOutlinedIcon","MoreHorizOutlined","ShareOutlined","Modal","useDispatch","useSelector","db","selectQuestionId","selectQuestionName","setQuestionInfo","firebase","selectUser","setAppElement","Post","Id","question","image","timestamp","NITuser","user","openModal","setIsModalOpen","dispatch","questionId","questionName","answer","setAnswer","getAnswers","setGetAnswers","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","answers","data","handleAnswer","e","preventDefault","add","firestore","FieldValue","serverTimestamp","console","log","photo","displayName","email","Date","toDate","toLocaleString","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","target","value","position","paddingBottom","color","fontSize","display","right"],"mappings":"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","sourcesContent":["import { Avatar } from '@material-ui/core'\nimport React, { useEffect, useState } from \"react\";\nimport '../css/Post.css'\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport Modal from 'react-modal';\nimport \"../css/Navbar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport db from \"../firebase\";\nimport { selectQuestionId, selectQuestionName, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\nimport { selectUser } from \"../features/userSlice\";\n\n\n  Modal.setAppElement('#root');\nfunction Post({Id, question,image, timestamp,NITuser})\n{\n    const user = useSelector(selectUser);\n    const [openModal, setIsModalOpen] = useState(false)\n    const dispatch = useDispatch();\n\n    const questionId = useSelector(selectQuestionId);\n    const questionName = useSelector(selectQuestionName)\n     \n    const [answer, setAnswer] = useState(\"\");\n    const [getAnswers, setGetAnswers] = useState([]);\n    useEffect(() => {\n        if (questionId) {\n          db.collection(\"questions\")\n            .doc(questionId)\n            .collection(\"answer\")\n            .orderBy(\"timestamp\", \"desc\")\n            .onSnapshot((snapshot) =>\n              setGetAnswers(\n                snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\n              )\n            );\n        }\n      }, [questionId]);\n  \n    const handleAnswer = (e) => {\n        e.preventDefault();\n    \n        if (questionId) {\n          db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\n            questionId: questionId,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            answer: answer,\n            user: user,\n          });\n        \n        console.log(questionId , questionName);\n        setAnswer(\"\");\n        setIsModalOpen(false);\n        }\n      };\n    \n  \n  return (\n    <div\n      className=\"post\"\n      onClick={() =>\n        dispatch(\n          setQuestionInfo({\n            questionId: Id,\n            questionName: question,\n          })\n        )\n      }\n    >\n      <div className=\"post_info\">\n        <Avatar\n        src= {NITuser.photo}/>\n        <h4>{NITuser.displayName?NITuser.displayName:NITuser.email}</h4>\n            <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\n            <div className=\"post_body\">\n                <div className= \"post_question\">\n                    <p>{question}</p>\n                    <button onClick ={() => setIsModalOpen(true)}\n                    className=\"post_button\">Answer\n                    </button>\n                    <Modal isOpen={openModal}\n                 onRequestClose= {()=>setIsModalOpen(false)}\n                 shouldCloseOnOverlayClick={false}\n                 style ={\n                     {\n                         overlay:{\n                             width : 600,\n                             height:550,\n                             backgroundColor: \"rgba(0,0,0,0.8)\",\n                             zIndex:\"1000\",\n                             top:\"50%\",\n                             left: \"50%\",\n                             marginTop:\"-250px\",\n                             marginLeft:\"-350px\",\n                         },\n                     }\n                 }\n                 >\n                          \n                              <div className=\"modal_question\">\n              <h1>{question}</h1>\n              <p>\n                asked by\n                <span className=\"name\">\n                {NITuser.displayName ? NITuser.displayName : NITuser.email}\n                </span>{\" \"}\n                on\n                <span className=\"name\">\n                {new Date(timestamp?.toDate()).toLocaleString()}\n                </span>\n              </p>\n            </div>\n            <div className=\"modal_answer\">\n              <textarea\n              required \n              value ={answer}\n              onChange={(e) => setAnswer(e.target.value)}\n                placeholder=\"Enter Your Answer\"\n                type=\"text\"\n              />\n                                \n                                  </div>\n                            \n                              <div className = \"modal__button\">\n                              <button className=\"cancel\" onClick={()=>setIsModalOpen(false)}>Cancel</button>\n\n                              <button type =\"submit\" onClick={handleAnswer} className=\"add\">\n                                  Submit Your Answer\n                              </button>\n\n                              </div>\n\n                        </Modal>\n                      \n                 \n                </div>\n                <div className= \"post_ans\">\n                {getAnswers.map(({ id, answers }) => (\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\n              {Id === answers.questionId ? (\n                <span>\n                  {answers.answer}\n                  <br />\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      color: \"gray\",\n                      fontSize: \"small\",\n                      display: \"flex\",\n                      right: \"0px\",\n                    }}\n                  >\n                    <span style={{ color: \"#b92b27\" }}>\n                      {answers.user.displayName\n                        ? answers.user.displayName\n                        : answers.user.email}{\" \"}\n                      on{\" \"}\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\n                    </span>\n                  </span>\n                </span>\n              ) : (\n                \"\"\n              )}\n            </p>\n          ))}\n\n                </div>\n                <img src ={image}\n                alt=\"\"/>\n\n            </div>\n            <div className= \"post_footer\">\n                <div className= \"post_footerAction\">\n                    <ArrowUpwardOutlinedIcon />\n                    <ArrowDownwardOutlinedIcon />\n                </div>\n                <RepeatOutlinedIcon />\n                <ChatBubbleOutlineOutlinedIcon />\n                <div className= \"post_footerLeft\">\n                    <ShareOutlined />\n                    <MoreHorizOutlined />\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n\n}\nexport default Post;"]},"metadata":{},"sourceType":"module"}